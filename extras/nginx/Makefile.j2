TROPOSPHERE_PATH={{TROPOSPHERE_PATH}}
BUNDLE_PATH={{ CERT_DIR }}/{{ BUNDLE_FILE }}
CERT_PATH={{ CERT_DIR }}/{{ CERT_FILE }}
COMBINED_CERT_PATH={{ CERT_DIR }}/{{ COMBINED_CERT_FILE }}
DHPARAM={{ DHPARAM }}
LOCATIONS_DIR={{ LOCATIONS_DIR }}
KEY_PATH={{ KEY_PATH }}/{{ KEY_FILE }}
KEY_SIZE={{ KEY_SIZE }}
SERVER_URL={{ SERVER_URL }}
SITES_AVAILABLE_DIR={{ SITES_AVAILABLE_DIR }}
SITES_ENABLED_DIR= {{ SITES_ENABLED_DIR }}
VIRTUALENV_PATH={{ VIRTUALENV_PATH }}

ASSETS_PATH=$(TROPOSPHERE_PATH)/troposphere/assets

DEFAULT_SITE_FILE=default
ATMO_FILE=atmo.conf
SITE_FILE=site.conf
SITE_CONFIG=$(TROPOSPHERE_PATH)/extras/nginx/$(SITE_FILE)
TROPO_FILE=tropo.conf
TROPO_CONFIG=$(TROPOSPHERE_PATH)/extras/nginx/locations/$(TROPO_FILE)

.PHONY: all clean setup setup-site setup-tropo deploy deploy-tropo

all: deploy

$(DHPARAM):
	openssl dhparam -out $(DHPARAM) $(KEY_SIZE)

setup: setup-site setup-tropo

setup-site:
	$(VIRTUALENV_PATH)/bin/python $(TROPOSPHERE_PATH)/configure -c nginx:nginx-site

setup-tropo:
	$(VIRTUALENV_PATH)/bin/python $(TROPOSPHERE_PATH)/configure -c nginx:nginx-tropo

$(COMBINED_CERT_PATH):
	cat $(CERT_PATH) $(BUNDLE_PATH) > $(COMBINED_CERT_PATH)

deploy: $(COMBINED_CERT_PATH) setup $(DHPARAM) unlink deploy-tropo
	mkdir -p $(SITES_AVAILABLE_DIR)
	mkdir -p $(SITES_ENABLED_DIR)
	ln -fs $(TROPOSPHERE_PATH)/extras/nginx/$(SITE_FILE) $(SITES_AVAILABLE_DIR)/$(SITE_FILE)
	ln -fs $(SITES_AVAILABLE_DIR)/$(SITE_FILE) $(SITES_ENABLED_DIR)/$(SITE_FILE)

deploy-tropo:
	mkdir -p $(LOCATIONS_DIR)
	ln -fs $(TROPO_CONFIG) $(LOCATIONS_DIR)/$(TROPO_FILE)

unlink: unlink-tropo
	-rm $(SITES_ENABLED_DIR)/$(DEFAULT_SITE_FILE)
	-rm $(SITES_ENABLED_DIR)/$(ATMO_FILE)
	-rm $(SITES_ENABLED_DIR)/$(SITE_FILE)
	-rm $(SITES_AVAILABLE_DIR)/$(SITE_FILE)

unlink-tropo:
	-rm $(LOCATIONS_DIR)/$(TROPO_FILE)

test:
	service nginx configtest

restart:
	service nginx restart

clean: unlink
	-rm $(COMBINED_CERT_PATH)
	-rm $(SITE_CONFIG)
	-rm $(TROPO_CONFIG)
	-rm $(DHPARAM)
